"#############################################################################
" .vimrc
" Author: botello <botello@gmail.com>
" Source: https://github.com/botello/dotfiles
"#############################################################################

"--------------------------------------------------------------------------
" General settings
"--------------------------------------------------------------------------
source $VIMRUNTIME/mswin.vim
set nocompatible
behave mswin
filetype off

"--------------------------------------------------------------------------
" Fixes for specific terminals
"--------------------------------------------------------------------------
if $COLORTERM == 'gnome-terminal'
  set t_Co=256
  let base16colorspace=256
endif

"--------------------------------------------------------------------------
" Vundle
"--------------------------------------------------------------------------
set rtp+=$HOME/.vim/bundle/Vundle.vim/
"set rtp+=$HOME/.vim/vimfiles/
let $GIT_SSL_NO_VERIFY = 'true'
call vundle#begin('$HOME/.vim/bundle')

"--------------------------------------------------------------------------
" Bundles
"--------------------------------------------------------------------------
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

Plugin 'chriskempson/base16-vim'
Plugin 'craigemery/vim-autotag'
Plugin 'scrooloose/syntastic'

Plugin 'vhda/verilog_systemverilog.vim'
Plugin 'vim-scripts/verilog_emacsauto.vim'

call vundle#end()
filetype plugin indent on

"--------------------------------------------------------------------------
" Settings
"--------------------------------------------------------------------------
set encoding=utf-8 fileformats=unix,dos,mac
set laststatus=2 cmdheight=2
set backspace=indent,eol,start  " same as 2
set autochdir history=1000
set shortmess=atI report=0 showcmd hidden
set completeopt=longest,menu " for omnipotent

"set lines=50 columns=100
set number colorcolumn=+2
"set textwidth=78  " auto break lines
set nowrap linebreak
set hlsearch incsearch ignorecase smartcase
set nolazyredraw
set scrolloff=4
set wildignore=.svn,CVS,.git,.hg,*.o,*.so,*.obj,*.swp,*.jpg,*.png,*.gif
set wildmenu
set wildmode=list:longest,full

" Folding
"set foldmethod=marker
set foldmethod=indent
set foldlevel=0
set foldnestmax=6
set foldlevelstart=20
set foldcolumn=2
set nofoldenable

nnoremap <space> za
vnoremap <space> zf

" Spaces instead of tabs
let tabsize=2
execute "set tabstop=".tabsize
execute "set shiftwidth=".tabsize
execute "set softtabstop=".tabsize
set expandtab

" Enable spelling
set spell spelllang=en_us

" Highlight trailing spaces
match Visual "\s\+$"

" Search for (visual) selected text using mapped '*' and '#'.
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
    \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
    \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

" Tag file location
set tags=tags;

" Remember cursor position between vim sessions
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
endif

" Trailing whitespace
set nolist
set listchars=tab:»·,trail:·,extends:»,precedes:«,eol:¶
" Only shown when not in insert mode so I don't go insane.
augroup trailing
  au!
  au InsertEnter * execute "set list"
  au InsertLeave * execute "set nolist"
augroup END

" Only show cursorline in the current window and in normal mode.
augroup cline
  au!
  au WinLeave * set nocursorcolumn
  au WinEnter * set cursorcolumn
  au InsertEnter * set nocursorcolumn
  au InsertLeave * set cursorcolumn
  au WinLeave * set nocursorline
  au WinEnter * set cursorline
  au InsertEnter * set nocursorline
  au InsertLeave * set cursorline
augroup END

" Maping next/prev buffer to <TAB> and <SHIFT-TAB> key in cmd mode
nnoremap <silent> <tab> :bnext<cr>
nnoremap <silent> <s-tab> :bprev<cr>

" Disable backup file, enable read modified files
set nobackup nowarn noswapfile
set autoread

" Disable all sounds and visual bells
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

"   set diffexpr=MyDiff()
"   function MyDiff()
"       let opt = '-a --binary '
"       if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
"       if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
"       let arg1 = v:fname_in
"       if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
"       let arg2 = v:fname_ne:e
"       if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
"       let arg3 = v:fname_out
"       if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
"       let eq = ''
"       if $VIMRUNTIME =~ ' '
"           if &sh =~ '\<cmd'
"               let cmd = '""' . $VIMRUNTIME . '\diff"'
"               let eq = '"'
"           else
"               let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
"           endif
"       else
"           let cmd = $VIMRUNTIME . '\diff'
"       endif
"       silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
"   endfunction

"--------------------------------------------------------------------------
" Plugin configuration
"--------------------------------------------------------------------------

let g:airline_detect_spell = 0
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_tab_type = 0
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#whitespace#show_message = 0
let g:airline_mode_map = {
    \ '__' : '-',
    \ 'n'  : 'N',
    \ 'i'  : 'I',
    \ 'R'  : 'R',
    \ 'c'  : 'C',
    \ 'v'  : 'V',
    \ 'V'  : 'V',
    \ '' : 'V',
    \ 's'  : 'S',
    \ 'S'  : 'S',
    \ '' : 'S',
    \ }

syntax enable
set background=dark
colorscheme base16-monokai

"#############################################################################
" GUI settings (.gvimrc)
"#############################################################################
if has("gui_running")
  if has("gui_gtk2")
    "set guifont=Meslo\ LG\ S\ DZ\ 13
    "set guifont=Droid\ Sans\ Mono\ Slashed\ for\ Powerline\ 12
    "set guifont=Bistream\ Vera\ Sans\ Mono\ 11
    set guifont=Source\ Code\ Pro\ for\ Powerline\ 11
    "set printfont=Monospace\ 11
    set printfont=Monospace\ 11
  elseif has("gui_win32")
    "set guifont=Fira_Mono_for_Powerline:h9:cANSI
    "set guifont=Sauce_Code_Powerline:h9:cANSI
    "set guifont=Menlo_for_PowerLine:h10:cANSI
    set guifont=Droid_Sans_Mono_Slashed_for_Pow:h8:cANSI
    "set guifont=Droid_Sans_Mono:h10:cANSI
    "set guifont=Consolas:h11:cANSI
    set printfont=Consolas:h10:cANSI
  endif

  set lines=50 columns=100

  set linespace=-1   " vertical space between text lines.

  set guioptions-=b
  set guioptions-=m
  set guioptions-=T

  " Toggle Menu and Toolbar
  map <silent> <F11> :if &guioptions =~# 'T' <Bar>
    \set guioptions-=m <Bar>
    \set guioptions-=T <Bar>
  \else <Bar>
    \set guioptions+=m <Bar>
    \set guioptions+=T <Bar>
  \endif<CR>
endif
